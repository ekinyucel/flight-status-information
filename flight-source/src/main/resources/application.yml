flight-status:
  api: https://api.schiphol.nl/public-flights/flights
  version: v4
  app:
    id: <app-id>
    key: <app-secret>

spring:
  kafka:
    properties:
      # confluent cloud config
      bootstrap.servers: <kafka-broker>
      sasl.mechanism: PLAIN
      sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required
  username='username' password='password';"
      security.protocol: SASL_SSL
      # confluent schema registry
      schema.registry.url: <schema-registry>
      basic.auth.credentials.source: USER_INFO
      schema.registry.basic.auth.user.info: <auth-user-info>
      streams:
        replication-factor: 3
  cloud:
    stream:
      function:
        definition: produceFlightStatusInformation
      bindings:
        # kafka producer
        produceFlightStatusInformation-out-0:
          binder: kafka
          destination: flightstatus
          content-type: application/*+avro
          producer:
            partition-count: 4
            useNativeEncoding: true
      kafka:
        binder:
          producer-properties:
            key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
logging:
  level: info